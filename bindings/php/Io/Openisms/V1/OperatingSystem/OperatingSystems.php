<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: io/openisms/api.proto

namespace Io\Openisms\V1\OperatingSystem;

use UnexpectedValueException;

/**
 * Protobuf type <code>io.openisms.v1.OperatingSystem.OperatingSystems</code>
 */
class OperatingSystems
{
    /**
     * Generated from protobuf enum <code>undefined = 0;</code>
     */
    const undefined = 0;
    /**
     * Generated from protobuf enum <code>macos = 1;</code>
     */
    const macos = 1;
    /**
     * Generated from protobuf enum <code>windows = 2;</code>
     */
    const windows = 2;
    /**
     * Generated from protobuf enum <code>linux = 3;</code>
     */
    const linux = 3;
    /**
     * Generated from protobuf enum <code>unix = 4;</code>
     */
    const unix = 4;
    /**
     * Generated from protobuf enum <code>chrome_os = 5;</code>
     */
    const chrome_os = 5;
    /**
     * Generated from protobuf enum <code>ios = 10;</code>
     */
    const ios = 10;
    /**
     * Generated from protobuf enum <code>android = 11;</code>
     */
    const android = 11;
    /**
     * Generated from protobuf enum <code>ros = 14;</code>
     */
    const ros = 14;
    /**
     * Generated from protobuf enum <code>other = 15;</code>
     */
    const other = 15;

    private static $valueToName = [
        self::undefined => 'undefined',
        self::macos => 'macos',
        self::windows => 'windows',
        self::linux => 'linux',
        self::unix => 'unix',
        self::chrome_os => 'chrome_os',
        self::ios => 'ios',
        self::android => 'android',
        self::ros => 'ros',
        self::other => 'other',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(OperatingSystems::class, \Io\Openisms\V1\OperatingSystem_OperatingSystems::class);

