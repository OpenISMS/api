// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.openisms.api

sealed abstract class Visibility(val value: _root_.scala.Int) extends _root_.scalapb.GeneratedEnum {
  type EnumType = Visibility
  def isundefined: _root_.scala.Boolean = false
  def ispublic: _root_.scala.Boolean = false
  def isinternal: _root_.scala.Boolean = false
  def isconfidential: _root_.scala.Boolean = false
  def companion: _root_.scalapb.GeneratedEnumCompanion[Visibility] = io.openisms.api.Visibility
  final def asRecognized: _root_.scala.Option[io.openisms.api.Visibility.Recognized] = if (isUnrecognized) _root_.scala.None else _root_.scala.Some(this.asInstanceOf[io.openisms.api.Visibility.Recognized])
}

object Visibility extends _root_.scalapb.GeneratedEnumCompanion[Visibility] {
  sealed trait Recognized extends Visibility
  implicit def enumCompanion: _root_.scalapb.GeneratedEnumCompanion[Visibility] = this
  
  @SerialVersionUID(0L)
  case object undefined extends Visibility(0) with Visibility.Recognized {
    val index = 0
    val name = "undefined"
    override def isundefined: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object public extends Visibility(1) with Visibility.Recognized {
    val index = 1
    val name = "public"
    override def ispublic: _root_.scala.Boolean = true
  }
  
  /** private
    */
  @SerialVersionUID(0L)
  case object internal extends Visibility(2) with Visibility.Recognized {
    val index = 2
    val name = "internal"
    override def isinternal: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object confidential extends Visibility(3) with Visibility.Recognized {
    val index = 3
    val name = "confidential"
    override def isconfidential: _root_.scala.Boolean = true
  }
  
  @SerialVersionUID(0L)
  final case class Unrecognized(unrecognizedValue: _root_.scala.Int) extends Visibility(unrecognizedValue) with _root_.scalapb.UnrecognizedEnum
  lazy val values = scala.collection.immutable.Seq(undefined, public, internal, confidential)
  def fromValue(__value: _root_.scala.Int): Visibility = __value match {
    case 0 => undefined
    case 1 => public
    case 2 => internal
    case 3 => confidential
    case __other => Unrecognized(__other)
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = ApiProto.javaDescriptor.getEnumTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = ApiProto.scalaDescriptor.enums(0)
}