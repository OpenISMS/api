// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.openisms.api

/** @param securityAttributes
  *   branch-protection
  */
@SerialVersionUID(0L)
final case class Repository(
    name: _root_.scala.Predef.String = "",
    url: _root_.scala.Predef.String = "",
    description: _root_.scala.Predef.String = "",
    visibility: io.openisms.api.Visibility = io.openisms.api.Visibility.undefined,
    members: _root_.scala.Seq[io.openisms.api.Person] = _root_.scala.Seq.empty,
    securityAttributes: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    tags: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Repository] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = url
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = description
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      
      {
        val __value = visibility.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(4, __value)
        }
      };
      members.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      securityAttributes.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
      }
      tags.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(10, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = url
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = description
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      {
        val __v = visibility.value
        if (__v != 0) {
          _output__.writeEnum(4, __v)
        }
      };
      members.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      securityAttributes.foreach { __v =>
        val __m = __v
        _output__.writeString(6, __m)
      };
      tags.foreach { __v =>
        val __m = __v
        _output__.writeString(10, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withName(__v: _root_.scala.Predef.String): Repository = copy(name = __v)
    def withUrl(__v: _root_.scala.Predef.String): Repository = copy(url = __v)
    def withDescription(__v: _root_.scala.Predef.String): Repository = copy(description = __v)
    def withVisibility(__v: io.openisms.api.Visibility): Repository = copy(visibility = __v)
    def clearMembers = copy(members = _root_.scala.Seq.empty)
    def addMembers(__vs: io.openisms.api.Person *): Repository = addAllMembers(__vs)
    def addAllMembers(__vs: Iterable[io.openisms.api.Person]): Repository = copy(members = members ++ __vs)
    def withMembers(__v: _root_.scala.Seq[io.openisms.api.Person]): Repository = copy(members = __v)
    def clearSecurityAttributes = copy(securityAttributes = _root_.scala.Seq.empty)
    def addSecurityAttributes(__vs: _root_.scala.Predef.String *): Repository = addAllSecurityAttributes(__vs)
    def addAllSecurityAttributes(__vs: Iterable[_root_.scala.Predef.String]): Repository = copy(securityAttributes = securityAttributes ++ __vs)
    def withSecurityAttributes(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Repository = copy(securityAttributes = __v)
    def clearTags = copy(tags = _root_.scala.Seq.empty)
    def addTags(__vs: _root_.scala.Predef.String *): Repository = addAllTags(__vs)
    def addAllTags(__vs: Iterable[_root_.scala.Predef.String]): Repository = copy(tags = tags ++ __vs)
    def withTags(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Repository = copy(tags = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = url
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 4 => {
          val __t = visibility.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 5 => members
        case 6 => securityAttributes
        case 10 => tags
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(name)
        case 2 => _root_.scalapb.descriptors.PString(url)
        case 3 => _root_.scalapb.descriptors.PString(description)
        case 4 => _root_.scalapb.descriptors.PEnum(visibility.scalaValueDescriptor)
        case 5 => _root_.scalapb.descriptors.PRepeated(members.iterator.map(_.toPMessage).toVector)
        case 6 => _root_.scalapb.descriptors.PRepeated(securityAttributes.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 10 => _root_.scalapb.descriptors.PRepeated(tags.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.openisms.api.Repository.type = io.openisms.api.Repository
    // @@protoc_insertion_point(GeneratedMessage[io.openisms.v1.Repository])
}

object Repository extends scalapb.GeneratedMessageCompanion[io.openisms.api.Repository] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.openisms.api.Repository] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.openisms.api.Repository = {
    var __name: _root_.scala.Predef.String = ""
    var __url: _root_.scala.Predef.String = ""
    var __description: _root_.scala.Predef.String = ""
    var __visibility: io.openisms.api.Visibility = io.openisms.api.Visibility.undefined
    val __members: _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.Person] = new _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.Person]
    val __securityAttributes: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __tags: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __name = _input__.readStringRequireUtf8()
        case 18 =>
          __url = _input__.readStringRequireUtf8()
        case 26 =>
          __description = _input__.readStringRequireUtf8()
        case 32 =>
          __visibility = io.openisms.api.Visibility.fromValue(_input__.readEnum())
        case 42 =>
          __members += _root_.scalapb.LiteParser.readMessage[io.openisms.api.Person](_input__)
        case 50 =>
          __securityAttributes += _input__.readStringRequireUtf8()
        case 82 =>
          __tags += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.openisms.api.Repository(
        name = __name,
        url = __url,
        description = __description,
        visibility = __visibility,
        members = __members.result(),
        securityAttributes = __securityAttributes.result(),
        tags = __tags.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.openisms.api.Repository] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.openisms.api.Repository(
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        url = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        description = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        visibility = io.openisms.api.Visibility.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(io.openisms.api.Visibility.undefined.scalaValueDescriptor).number),
        members = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[io.openisms.api.Person]]).getOrElse(_root_.scala.Seq.empty),
        securityAttributes = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        tags = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiProto.javaDescriptor.getMessageTypes().get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 5 => __out = io.openisms.api.Person
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 4 => io.openisms.api.Visibility
    }
  }
  lazy val defaultInstance = io.openisms.api.Repository(
    name = "",
    url = "",
    description = "",
    visibility = io.openisms.api.Visibility.undefined,
    members = _root_.scala.Seq.empty,
    securityAttributes = _root_.scala.Seq.empty,
    tags = _root_.scala.Seq.empty
  )
  implicit class RepositoryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Repository]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.openisms.api.Repository](_l) {
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def url: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.url)((c_, f_) => c_.copy(url = f_))
    def description: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def visibility: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Visibility] = field(_.visibility)((c_, f_) => c_.copy(visibility = f_))
    def members: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.openisms.api.Person]] = field(_.members)((c_, f_) => c_.copy(members = f_))
    def securityAttributes: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.securityAttributes)((c_, f_) => c_.copy(securityAttributes = f_))
    def tags: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.tags)((c_, f_) => c_.copy(tags = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val URL_FIELD_NUMBER = 2
  final val DESCRIPTION_FIELD_NUMBER = 3
  final val VISIBILITY_FIELD_NUMBER = 4
  final val MEMBERS_FIELD_NUMBER = 5
  final val SECURITY_ATTRIBUTES_FIELD_NUMBER = 6
  final val TAGS_FIELD_NUMBER = 10
  def of(
    name: _root_.scala.Predef.String,
    url: _root_.scala.Predef.String,
    description: _root_.scala.Predef.String,
    visibility: io.openisms.api.Visibility,
    members: _root_.scala.Seq[io.openisms.api.Person],
    securityAttributes: _root_.scala.Seq[_root_.scala.Predef.String],
    tags: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.io.openisms.api.Repository = _root_.io.openisms.api.Repository(
    name,
    url,
    description,
    visibility,
    members,
    securityAttributes,
    tags
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.openisms.v1.Repository])
}
