// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.openisms.api

/** @param connectedAccounts
  *   via SSO, SAML, OIDC
  * @param possessions
  *   Laptop, Phone, Adaptor
  */
@SerialVersionUID(0L)
final case class User(
    person: _root_.scala.Option[io.openisms.api.Person] = _root_.scala.None,
    secondFactorActive: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    secondFactorEnforced: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    active: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    suspended: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    disabled: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    deleted: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None,
    groups: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    privileges: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    employment: _root_.scala.Option[io.openisms.api.Employment] = _root_.scala.None,
    connectedAccounts: _root_.scala.Seq[io.openisms.api.ConnectedAccount] = _root_.scala.Seq.empty,
    possessions: _root_.scala.Seq[io.openisms.api.PhysicalObject] = _root_.scala.Seq.empty,
    tags: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[User] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (person.isDefined) {
        val __value = person.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (secondFactorActive.isDefined) {
        val __value = io.openisms.api.User._typemapper_secondFactorActive.toBase(secondFactorActive.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (secondFactorEnforced.isDefined) {
        val __value = io.openisms.api.User._typemapper_secondFactorEnforced.toBase(secondFactorEnforced.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (active.isDefined) {
        val __value = io.openisms.api.User._typemapper_active.toBase(active.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (suspended.isDefined) {
        val __value = io.openisms.api.User._typemapper_suspended.toBase(suspended.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (disabled.isDefined) {
        val __value = io.openisms.api.User._typemapper_disabled.toBase(disabled.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (deleted.isDefined) {
        val __value = io.openisms.api.User._typemapper_deleted.toBase(deleted.get)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      groups.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(15, __value)
      }
      privileges.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(16, __value)
      }
      if (employment.isDefined) {
        val __value = employment.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      connectedAccounts.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      possessions.foreach { __item =>
        val __value = __item
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      tags.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(40, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      person.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      secondFactorActive.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_secondFactorActive.toBase(__v)
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      secondFactorEnforced.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_secondFactorEnforced.toBase(__v)
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      active.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_active.toBase(__v)
        _output__.writeTag(7, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      suspended.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_suspended.toBase(__v)
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      disabled.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_disabled.toBase(__v)
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      deleted.foreach { __v =>
        val __m = io.openisms.api.User._typemapper_deleted.toBase(__v)
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      groups.foreach { __v =>
        val __m = __v
        _output__.writeString(15, __m)
      };
      privileges.foreach { __v =>
        val __m = __v
        _output__.writeString(16, __m)
      };
      employment.foreach { __v =>
        val __m = __v
        _output__.writeTag(20, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      connectedAccounts.foreach { __v =>
        val __m = __v
        _output__.writeTag(21, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      possessions.foreach { __v =>
        val __m = __v
        _output__.writeTag(22, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      tags.foreach { __v =>
        val __m = __v
        _output__.writeString(40, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def getPerson: io.openisms.api.Person = person.getOrElse(io.openisms.api.Person.defaultInstance)
    def clearPerson: User = copy(person = _root_.scala.None)
    def withPerson(__v: io.openisms.api.Person): User = copy(person = Option(__v))
    def getSecondFactorActive: _root_.scala.Boolean = secondFactorActive.getOrElse(io.openisms.api.User._typemapper_secondFactorActive.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearSecondFactorActive: User = copy(secondFactorActive = _root_.scala.None)
    def withSecondFactorActive(__v: _root_.scala.Boolean): User = copy(secondFactorActive = Option(__v))
    def getSecondFactorEnforced: _root_.scala.Boolean = secondFactorEnforced.getOrElse(io.openisms.api.User._typemapper_secondFactorEnforced.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearSecondFactorEnforced: User = copy(secondFactorEnforced = _root_.scala.None)
    def withSecondFactorEnforced(__v: _root_.scala.Boolean): User = copy(secondFactorEnforced = Option(__v))
    def getActive: _root_.scala.Boolean = active.getOrElse(io.openisms.api.User._typemapper_active.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearActive: User = copy(active = _root_.scala.None)
    def withActive(__v: _root_.scala.Boolean): User = copy(active = Option(__v))
    def getSuspended: _root_.scala.Boolean = suspended.getOrElse(io.openisms.api.User._typemapper_suspended.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearSuspended: User = copy(suspended = _root_.scala.None)
    def withSuspended(__v: _root_.scala.Boolean): User = copy(suspended = Option(__v))
    def getDisabled: _root_.scala.Boolean = disabled.getOrElse(io.openisms.api.User._typemapper_disabled.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearDisabled: User = copy(disabled = _root_.scala.None)
    def withDisabled(__v: _root_.scala.Boolean): User = copy(disabled = Option(__v))
    def getDeleted: _root_.scala.Boolean = deleted.getOrElse(io.openisms.api.User._typemapper_deleted.toCustom(com.google.protobuf.wrappers.BoolValue.defaultInstance))
    def clearDeleted: User = copy(deleted = _root_.scala.None)
    def withDeleted(__v: _root_.scala.Boolean): User = copy(deleted = Option(__v))
    def clearGroups = copy(groups = _root_.scala.Seq.empty)
    def addGroups(__vs: _root_.scala.Predef.String *): User = addAllGroups(__vs)
    def addAllGroups(__vs: Iterable[_root_.scala.Predef.String]): User = copy(groups = groups ++ __vs)
    def withGroups(__v: _root_.scala.Seq[_root_.scala.Predef.String]): User = copy(groups = __v)
    def clearPrivileges = copy(privileges = _root_.scala.Seq.empty)
    def addPrivileges(__vs: _root_.scala.Predef.String *): User = addAllPrivileges(__vs)
    def addAllPrivileges(__vs: Iterable[_root_.scala.Predef.String]): User = copy(privileges = privileges ++ __vs)
    def withPrivileges(__v: _root_.scala.Seq[_root_.scala.Predef.String]): User = copy(privileges = __v)
    def getEmployment: io.openisms.api.Employment = employment.getOrElse(io.openisms.api.Employment.defaultInstance)
    def clearEmployment: User = copy(employment = _root_.scala.None)
    def withEmployment(__v: io.openisms.api.Employment): User = copy(employment = Option(__v))
    def clearConnectedAccounts = copy(connectedAccounts = _root_.scala.Seq.empty)
    def addConnectedAccounts(__vs: io.openisms.api.ConnectedAccount *): User = addAllConnectedAccounts(__vs)
    def addAllConnectedAccounts(__vs: Iterable[io.openisms.api.ConnectedAccount]): User = copy(connectedAccounts = connectedAccounts ++ __vs)
    def withConnectedAccounts(__v: _root_.scala.Seq[io.openisms.api.ConnectedAccount]): User = copy(connectedAccounts = __v)
    def clearPossessions = copy(possessions = _root_.scala.Seq.empty)
    def addPossessions(__vs: io.openisms.api.PhysicalObject *): User = addAllPossessions(__vs)
    def addAllPossessions(__vs: Iterable[io.openisms.api.PhysicalObject]): User = copy(possessions = possessions ++ __vs)
    def withPossessions(__v: _root_.scala.Seq[io.openisms.api.PhysicalObject]): User = copy(possessions = __v)
    def clearTags = copy(tags = _root_.scala.Seq.empty)
    def addTags(__vs: _root_.scala.Predef.String *): User = addAllTags(__vs)
    def addAllTags(__vs: Iterable[_root_.scala.Predef.String]): User = copy(tags = tags ++ __vs)
    def withTags(__v: _root_.scala.Seq[_root_.scala.Predef.String]): User = copy(tags = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => person.orNull
        case 5 => secondFactorActive.map(io.openisms.api.User._typemapper_secondFactorActive.toBase(_)).orNull
        case 6 => secondFactorEnforced.map(io.openisms.api.User._typemapper_secondFactorEnforced.toBase(_)).orNull
        case 7 => active.map(io.openisms.api.User._typemapper_active.toBase(_)).orNull
        case 8 => suspended.map(io.openisms.api.User._typemapper_suspended.toBase(_)).orNull
        case 9 => disabled.map(io.openisms.api.User._typemapper_disabled.toBase(_)).orNull
        case 10 => deleted.map(io.openisms.api.User._typemapper_deleted.toBase(_)).orNull
        case 15 => groups
        case 16 => privileges
        case 20 => employment.orNull
        case 21 => connectedAccounts
        case 22 => possessions
        case 40 => tags
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => person.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => secondFactorActive.map(io.openisms.api.User._typemapper_secondFactorActive.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => secondFactorEnforced.map(io.openisms.api.User._typemapper_secondFactorEnforced.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => active.map(io.openisms.api.User._typemapper_active.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => suspended.map(io.openisms.api.User._typemapper_suspended.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => disabled.map(io.openisms.api.User._typemapper_disabled.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => deleted.map(io.openisms.api.User._typemapper_deleted.toBase(_).toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 15 => _root_.scalapb.descriptors.PRepeated(groups.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 16 => _root_.scalapb.descriptors.PRepeated(privileges.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 20 => employment.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 21 => _root_.scalapb.descriptors.PRepeated(connectedAccounts.iterator.map(_.toPMessage).toVector)
        case 22 => _root_.scalapb.descriptors.PRepeated(possessions.iterator.map(_.toPMessage).toVector)
        case 40 => _root_.scalapb.descriptors.PRepeated(tags.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.openisms.api.User.type = io.openisms.api.User
    // @@protoc_insertion_point(GeneratedMessage[io.openisms.v1.User])
}

object User extends scalapb.GeneratedMessageCompanion[io.openisms.api.User] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.openisms.api.User] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.openisms.api.User = {
    var __person: _root_.scala.Option[io.openisms.api.Person] = _root_.scala.None
    var __secondFactorActive: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __secondFactorEnforced: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __active: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __suspended: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __disabled: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    var __deleted: _root_.scala.Option[_root_.scala.Boolean] = _root_.scala.None
    val __groups: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    val __privileges: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __employment: _root_.scala.Option[io.openisms.api.Employment] = _root_.scala.None
    val __connectedAccounts: _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.ConnectedAccount] = new _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.ConnectedAccount]
    val __possessions: _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.PhysicalObject] = new _root_.scala.collection.immutable.VectorBuilder[io.openisms.api.PhysicalObject]
    val __tags: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __person = Option(__person.fold(_root_.scalapb.LiteParser.readMessage[io.openisms.api.Person](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __secondFactorActive = Option(io.openisms.api.User._typemapper_secondFactorActive.toCustom(__secondFactorActive.map(io.openisms.api.User._typemapper_secondFactorActive.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 50 =>
          __secondFactorEnforced = Option(io.openisms.api.User._typemapper_secondFactorEnforced.toCustom(__secondFactorEnforced.map(io.openisms.api.User._typemapper_secondFactorEnforced.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 58 =>
          __active = Option(io.openisms.api.User._typemapper_active.toCustom(__active.map(io.openisms.api.User._typemapper_active.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 66 =>
          __suspended = Option(io.openisms.api.User._typemapper_suspended.toCustom(__suspended.map(io.openisms.api.User._typemapper_suspended.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 74 =>
          __disabled = Option(io.openisms.api.User._typemapper_disabled.toCustom(__disabled.map(io.openisms.api.User._typemapper_disabled.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 82 =>
          __deleted = Option(io.openisms.api.User._typemapper_deleted.toCustom(__deleted.map(io.openisms.api.User._typemapper_deleted.toBase(_)).fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.wrappers.BoolValue](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _))))
        case 122 =>
          __groups += _input__.readStringRequireUtf8()
        case 130 =>
          __privileges += _input__.readStringRequireUtf8()
        case 162 =>
          __employment = Option(__employment.fold(_root_.scalapb.LiteParser.readMessage[io.openisms.api.Employment](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 170 =>
          __connectedAccounts += _root_.scalapb.LiteParser.readMessage[io.openisms.api.ConnectedAccount](_input__)
        case 178 =>
          __possessions += _root_.scalapb.LiteParser.readMessage[io.openisms.api.PhysicalObject](_input__)
        case 322 =>
          __tags += _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.openisms.api.User(
        person = __person,
        secondFactorActive = __secondFactorActive,
        secondFactorEnforced = __secondFactorEnforced,
        active = __active,
        suspended = __suspended,
        disabled = __disabled,
        deleted = __deleted,
        groups = __groups.result(),
        privileges = __privileges.result(),
        employment = __employment,
        connectedAccounts = __connectedAccounts.result(),
        possessions = __possessions.result(),
        tags = __tags.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.openisms.api.User] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.openisms.api.User(
        person = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[io.openisms.api.Person]]),
        secondFactorActive = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_secondFactorActive.toCustom(_)),
        secondFactorEnforced = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_secondFactorEnforced.toCustom(_)),
        active = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_active.toCustom(_)),
        suspended = __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_suspended.toCustom(_)),
        disabled = __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_disabled.toCustom(_)),
        deleted = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.wrappers.BoolValue]]).map(io.openisms.api.User._typemapper_deleted.toCustom(_)),
        groups = __fieldsMap.get(scalaDescriptor.findFieldByNumber(15).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        privileges = __fieldsMap.get(scalaDescriptor.findFieldByNumber(16).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        employment = __fieldsMap.get(scalaDescriptor.findFieldByNumber(20).get).flatMap(_.as[_root_.scala.Option[io.openisms.api.Employment]]),
        connectedAccounts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(21).get).map(_.as[_root_.scala.Seq[io.openisms.api.ConnectedAccount]]).getOrElse(_root_.scala.Seq.empty),
        possessions = __fieldsMap.get(scalaDescriptor.findFieldByNumber(22).get).map(_.as[_root_.scala.Seq[io.openisms.api.PhysicalObject]]).getOrElse(_root_.scala.Seq.empty),
        tags = __fieldsMap.get(scalaDescriptor.findFieldByNumber(40).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiProto.javaDescriptor.getMessageTypes().get(3)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiProto.scalaDescriptor.messages(3)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = io.openisms.api.Person
      case 5 => __out = com.google.protobuf.wrappers.BoolValue
      case 6 => __out = com.google.protobuf.wrappers.BoolValue
      case 7 => __out = com.google.protobuf.wrappers.BoolValue
      case 8 => __out = com.google.protobuf.wrappers.BoolValue
      case 9 => __out = com.google.protobuf.wrappers.BoolValue
      case 10 => __out = com.google.protobuf.wrappers.BoolValue
      case 20 => __out = io.openisms.api.Employment
      case 21 => __out = io.openisms.api.ConnectedAccount
      case 22 => __out = io.openisms.api.PhysicalObject
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.openisms.api.User(
    person = _root_.scala.None,
    secondFactorActive = _root_.scala.None,
    secondFactorEnforced = _root_.scala.None,
    active = _root_.scala.None,
    suspended = _root_.scala.None,
    disabled = _root_.scala.None,
    deleted = _root_.scala.None,
    groups = _root_.scala.Seq.empty,
    privileges = _root_.scala.Seq.empty,
    employment = _root_.scala.None,
    connectedAccounts = _root_.scala.Seq.empty,
    possessions = _root_.scala.Seq.empty,
    tags = _root_.scala.Seq.empty
  )
  implicit class UserLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.User]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.openisms.api.User](_l) {
    def person: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Person] = field(_.getPerson)((c_, f_) => c_.copy(person = Option(f_)))
    def optionalPerson: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.openisms.api.Person]] = field(_.person)((c_, f_) => c_.copy(person = f_))
    def secondFactorActive: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getSecondFactorActive)((c_, f_) => c_.copy(secondFactorActive = Option(f_)))
    def optionalSecondFactorActive: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.secondFactorActive)((c_, f_) => c_.copy(secondFactorActive = f_))
    def secondFactorEnforced: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getSecondFactorEnforced)((c_, f_) => c_.copy(secondFactorEnforced = Option(f_)))
    def optionalSecondFactorEnforced: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.secondFactorEnforced)((c_, f_) => c_.copy(secondFactorEnforced = f_))
    def active: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getActive)((c_, f_) => c_.copy(active = Option(f_)))
    def optionalActive: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.active)((c_, f_) => c_.copy(active = f_))
    def suspended: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getSuspended)((c_, f_) => c_.copy(suspended = Option(f_)))
    def optionalSuspended: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.suspended)((c_, f_) => c_.copy(suspended = f_))
    def disabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getDisabled)((c_, f_) => c_.copy(disabled = Option(f_)))
    def optionalDisabled: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.disabled)((c_, f_) => c_.copy(disabled = f_))
    def deleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.getDeleted)((c_, f_) => c_.copy(deleted = Option(f_)))
    def optionalDeleted: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[_root_.scala.Boolean]] = field(_.deleted)((c_, f_) => c_.copy(deleted = f_))
    def groups: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.groups)((c_, f_) => c_.copy(groups = f_))
    def privileges: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.privileges)((c_, f_) => c_.copy(privileges = f_))
    def employment: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Employment] = field(_.getEmployment)((c_, f_) => c_.copy(employment = Option(f_)))
    def optionalEmployment: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.openisms.api.Employment]] = field(_.employment)((c_, f_) => c_.copy(employment = f_))
    def connectedAccounts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.openisms.api.ConnectedAccount]] = field(_.connectedAccounts)((c_, f_) => c_.copy(connectedAccounts = f_))
    def possessions: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[io.openisms.api.PhysicalObject]] = field(_.possessions)((c_, f_) => c_.copy(possessions = f_))
    def tags: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.tags)((c_, f_) => c_.copy(tags = f_))
  }
  final val PERSON_FIELD_NUMBER = 1
  final val SECOND_FACTOR_ACTIVE_FIELD_NUMBER = 5
  final val SECOND_FACTOR_ENFORCED_FIELD_NUMBER = 6
  final val ACTIVE_FIELD_NUMBER = 7
  final val SUSPENDED_FIELD_NUMBER = 8
  final val DISABLED_FIELD_NUMBER = 9
  final val DELETED_FIELD_NUMBER = 10
  final val GROUPS_FIELD_NUMBER = 15
  final val PRIVILEGES_FIELD_NUMBER = 16
  final val EMPLOYMENT_FIELD_NUMBER = 20
  final val CONNECTED_ACCOUNTS_FIELD_NUMBER = 21
  final val POSSESSIONS_FIELD_NUMBER = 22
  final val TAGS_FIELD_NUMBER = 40
  @transient
  private[api] val _typemapper_secondFactorActive: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  @transient
  private[api] val _typemapper_secondFactorEnforced: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  @transient
  private[api] val _typemapper_active: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  @transient
  private[api] val _typemapper_suspended: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  @transient
  private[api] val _typemapper_disabled: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  @transient
  private[api] val _typemapper_deleted: _root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean] = implicitly[_root_.scalapb.TypeMapper[com.google.protobuf.wrappers.BoolValue, _root_.scala.Boolean]]
  def of(
    person: _root_.scala.Option[io.openisms.api.Person],
    secondFactorActive: _root_.scala.Option[_root_.scala.Boolean],
    secondFactorEnforced: _root_.scala.Option[_root_.scala.Boolean],
    active: _root_.scala.Option[_root_.scala.Boolean],
    suspended: _root_.scala.Option[_root_.scala.Boolean],
    disabled: _root_.scala.Option[_root_.scala.Boolean],
    deleted: _root_.scala.Option[_root_.scala.Boolean],
    groups: _root_.scala.Seq[_root_.scala.Predef.String],
    privileges: _root_.scala.Seq[_root_.scala.Predef.String],
    employment: _root_.scala.Option[io.openisms.api.Employment],
    connectedAccounts: _root_.scala.Seq[io.openisms.api.ConnectedAccount],
    possessions: _root_.scala.Seq[io.openisms.api.PhysicalObject],
    tags: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.io.openisms.api.User = _root_.io.openisms.api.User(
    person,
    secondFactorActive,
    secondFactorEnforced,
    active,
    suspended,
    disabled,
    deleted,
    groups,
    privileges,
    employment,
    connectedAccounts,
    possessions,
    tags
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.openisms.v1.User])
}
