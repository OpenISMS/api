// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.openisms.api

/** @param created
  *   technical date
  * @param updated
  *   technical date
  */
@SerialVersionUID(0L)
final case class Person(
    id: _root_.scala.Predef.String = "",
    name: _root_.scala.Option[io.openisms.api.Name] = _root_.scala.None,
    primaryEmail: _root_.scala.Predef.String = "",
    otherEmails: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    picture: _root_.scala.Option[io.openisms.api.Photo] = _root_.scala.None,
    company: _root_.scala.Predef.String = "",
    created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    updated: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Person] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = id
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      if (name.isDefined) {
        val __value = name.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = primaryEmail
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      otherEmails.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
      }
      if (picture.isDefined) {
        val __value = picture.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      
      {
        val __value = company
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(6, __value)
        }
      };
      if (created.isDefined) {
        val __value = created.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (updated.isDefined) {
        val __value = updated.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = id
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      name.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = primaryEmail
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
      otherEmails.foreach { __v =>
        val __m = __v
        _output__.writeString(4, __m)
      };
      picture.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = company
        if (!__v.isEmpty) {
          _output__.writeString(6, __v)
        }
      };
      created.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      updated.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withId(__v: _root_.scala.Predef.String): Person = copy(id = __v)
    def getName: io.openisms.api.Name = name.getOrElse(io.openisms.api.Name.defaultInstance)
    def clearName: Person = copy(name = _root_.scala.None)
    def withName(__v: io.openisms.api.Name): Person = copy(name = Option(__v))
    def withPrimaryEmail(__v: _root_.scala.Predef.String): Person = copy(primaryEmail = __v)
    def clearOtherEmails = copy(otherEmails = _root_.scala.Seq.empty)
    def addOtherEmails(__vs: _root_.scala.Predef.String *): Person = addAllOtherEmails(__vs)
    def addAllOtherEmails(__vs: Iterable[_root_.scala.Predef.String]): Person = copy(otherEmails = otherEmails ++ __vs)
    def withOtherEmails(__v: _root_.scala.Seq[_root_.scala.Predef.String]): Person = copy(otherEmails = __v)
    def getPicture: io.openisms.api.Photo = picture.getOrElse(io.openisms.api.Photo.defaultInstance)
    def clearPicture: Person = copy(picture = _root_.scala.None)
    def withPicture(__v: io.openisms.api.Photo): Person = copy(picture = Option(__v))
    def withCompany(__v: _root_.scala.Predef.String): Person = copy(company = __v)
    def getCreated: com.google.protobuf.timestamp.Timestamp = created.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearCreated: Person = copy(created = _root_.scala.None)
    def withCreated(__v: com.google.protobuf.timestamp.Timestamp): Person = copy(created = Option(__v))
    def getUpdated: com.google.protobuf.timestamp.Timestamp = updated.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearUpdated: Person = copy(updated = _root_.scala.None)
    def withUpdated(__v: com.google.protobuf.timestamp.Timestamp): Person = copy(updated = Option(__v))
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = id
          if (__t != "") __t else null
        }
        case 2 => name.orNull
        case 3 => {
          val __t = primaryEmail
          if (__t != "") __t else null
        }
        case 4 => otherEmails
        case 5 => picture.orNull
        case 6 => {
          val __t = company
          if (__t != "") __t else null
        }
        case 10 => created.orNull
        case 11 => updated.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(id)
        case 2 => name.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PString(primaryEmail)
        case 4 => _root_.scalapb.descriptors.PRepeated(otherEmails.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
        case 5 => picture.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => _root_.scalapb.descriptors.PString(company)
        case 10 => created.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => updated.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.openisms.api.Person.type = io.openisms.api.Person
    // @@protoc_insertion_point(GeneratedMessage[io.openisms.v1.Person])
}

object Person extends scalapb.GeneratedMessageCompanion[io.openisms.api.Person] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.openisms.api.Person] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.openisms.api.Person = {
    var __id: _root_.scala.Predef.String = ""
    var __name: _root_.scala.Option[io.openisms.api.Name] = _root_.scala.None
    var __primaryEmail: _root_.scala.Predef.String = ""
    val __otherEmails: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String]
    var __picture: _root_.scala.Option[io.openisms.api.Photo] = _root_.scala.None
    var __company: _root_.scala.Predef.String = ""
    var __created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var __updated: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp] = _root_.scala.None
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __id = _input__.readStringRequireUtf8()
        case 18 =>
          __name = Option(__name.fold(_root_.scalapb.LiteParser.readMessage[io.openisms.api.Name](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __primaryEmail = _input__.readStringRequireUtf8()
        case 34 =>
          __otherEmails += _input__.readStringRequireUtf8()
        case 42 =>
          __picture = Option(__picture.fold(_root_.scalapb.LiteParser.readMessage[io.openisms.api.Photo](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __company = _input__.readStringRequireUtf8()
        case 82 =>
          __created = Option(__created.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __updated = Option(__updated.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.timestamp.Timestamp](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.openisms.api.Person(
        id = __id,
        name = __name,
        primaryEmail = __primaryEmail,
        otherEmails = __otherEmails.result(),
        picture = __picture,
        company = __company,
        created = __created,
        updated = __updated,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.openisms.api.Person] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.openisms.api.Person(
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[io.openisms.api.Name]]),
        primaryEmail = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        otherEmails = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty),
        picture = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[io.openisms.api.Photo]]),
        company = __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        created = __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        updated = __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.timestamp.Timestamp]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiProto.javaDescriptor.getMessageTypes().get(4)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiProto.scalaDescriptor.messages(4)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = io.openisms.api.Name
      case 5 => __out = io.openisms.api.Photo
      case 10 => __out = com.google.protobuf.timestamp.Timestamp
      case 11 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.openisms.api.Person(
    id = "",
    name = _root_.scala.None,
    primaryEmail = "",
    otherEmails = _root_.scala.Seq.empty,
    picture = _root_.scala.None,
    company = "",
    created = _root_.scala.None,
    updated = _root_.scala.None
  )
  implicit class PersonLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Person]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.openisms.api.Person](_l) {
    def id: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Name] = field(_.getName)((c_, f_) => c_.copy(name = Option(f_)))
    def optionalName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.openisms.api.Name]] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def primaryEmail: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.primaryEmail)((c_, f_) => c_.copy(primaryEmail = f_))
    def otherEmails: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.otherEmails)((c_, f_) => c_.copy(otherEmails = f_))
    def picture: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Photo] = field(_.getPicture)((c_, f_) => c_.copy(picture = Option(f_)))
    def optionalPicture: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[io.openisms.api.Photo]] = field(_.picture)((c_, f_) => c_.copy(picture = f_))
    def company: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.company)((c_, f_) => c_.copy(company = f_))
    def created: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getCreated)((c_, f_) => c_.copy(created = Option(f_)))
    def optionalCreated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.created)((c_, f_) => c_.copy(created = f_))
    def updated: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getUpdated)((c_, f_) => c_.copy(updated = Option(f_)))
    def optionalUpdated: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.updated)((c_, f_) => c_.copy(updated = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val PRIMARY_EMAIL_FIELD_NUMBER = 3
  final val OTHER_EMAILS_FIELD_NUMBER = 4
  final val PICTURE_FIELD_NUMBER = 5
  final val COMPANY_FIELD_NUMBER = 6
  final val CREATED_FIELD_NUMBER = 10
  final val UPDATED_FIELD_NUMBER = 11
  def of(
    id: _root_.scala.Predef.String,
    name: _root_.scala.Option[io.openisms.api.Name],
    primaryEmail: _root_.scala.Predef.String,
    otherEmails: _root_.scala.Seq[_root_.scala.Predef.String],
    picture: _root_.scala.Option[io.openisms.api.Photo],
    company: _root_.scala.Predef.String,
    created: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp],
    updated: _root_.scala.Option[com.google.protobuf.timestamp.Timestamp]
  ): _root_.io.openisms.api.Person = _root_.io.openisms.api.Person(
    id,
    name,
    primaryEmail,
    otherEmails,
    picture,
    company,
    created,
    updated
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.openisms.v1.Person])
}
