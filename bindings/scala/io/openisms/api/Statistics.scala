// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package io.openisms.api

/** @param identifier
  *   accounts:num_users, device_management:num_30day_desktop_linux_managed_devices
  * @param name
  *   Number of users
  * @param value
  *   42
  * @param comment
  *   "Does not include suspended users"
  */
@SerialVersionUID(0L)
final case class Statistics(
    identifier: _root_.scala.Predef.String = "",
    name: _root_.scala.Predef.String = "",
    value: _root_.scala.Int = 0,
    comment: _root_.scala.Predef.String = "",
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[Statistics] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = identifier
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = name
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      
      {
        val __value = value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, __value)
        }
      };
      
      {
        val __value = comment
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = identifier
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = name
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
      {
        val __v = value
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = comment
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
      unknownFields.writeTo(_output__)
    }
    def withIdentifier(__v: _root_.scala.Predef.String): Statistics = copy(identifier = __v)
    def withName(__v: _root_.scala.Predef.String): Statistics = copy(name = __v)
    def withValue(__v: _root_.scala.Int): Statistics = copy(value = __v)
    def withComment(__v: _root_.scala.Predef.String): Statistics = copy(comment = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = identifier
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 3 => {
          val __t = value
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = comment
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(identifier)
        case 2 => _root_.scalapb.descriptors.PString(name)
        case 3 => _root_.scalapb.descriptors.PInt(value)
        case 4 => _root_.scalapb.descriptors.PString(comment)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion: io.openisms.api.Statistics.type = io.openisms.api.Statistics
    // @@protoc_insertion_point(GeneratedMessage[io.openisms.v1.Statistics])
}

object Statistics extends scalapb.GeneratedMessageCompanion[io.openisms.api.Statistics] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[io.openisms.api.Statistics] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): io.openisms.api.Statistics = {
    var __identifier: _root_.scala.Predef.String = ""
    var __name: _root_.scala.Predef.String = ""
    var __value: _root_.scala.Int = 0
    var __comment: _root_.scala.Predef.String = ""
    var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder = null
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __identifier = _input__.readStringRequireUtf8()
        case 18 =>
          __name = _input__.readStringRequireUtf8()
        case 24 =>
          __value = _input__.readInt32()
        case 34 =>
          __comment = _input__.readStringRequireUtf8()
        case tag =>
          if (_unknownFields__ == null) {
            _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
          }
          _unknownFields__.parseField(tag, _input__)
      }
    }
    io.openisms.api.Statistics(
        identifier = __identifier,
        name = __name,
        value = __value,
        comment = __comment,
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[io.openisms.api.Statistics] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      io.openisms.api.Statistics(
        identifier = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        name = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        comment = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ApiProto.javaDescriptor.getMessageTypes().get(20)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ApiProto.scalaDescriptor.messages(20)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = io.openisms.api.Statistics(
    identifier = "",
    name = "",
    value = 0,
    comment = ""
  )
  implicit class StatisticsLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, io.openisms.api.Statistics]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, io.openisms.api.Statistics](_l) {
    def identifier: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.identifier)((c_, f_) => c_.copy(identifier = f_))
    def name: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.value)((c_, f_) => c_.copy(value = f_))
    def comment: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.comment)((c_, f_) => c_.copy(comment = f_))
  }
  final val IDENTIFIER_FIELD_NUMBER = 1
  final val NAME_FIELD_NUMBER = 2
  final val VALUE_FIELD_NUMBER = 3
  final val COMMENT_FIELD_NUMBER = 4
  def of(
    identifier: _root_.scala.Predef.String,
    name: _root_.scala.Predef.String,
    value: _root_.scala.Int,
    comment: _root_.scala.Predef.String
  ): _root_.io.openisms.api.Statistics = _root_.io.openisms.api.Statistics(
    identifier,
    name,
    value,
    comment
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[io.openisms.v1.Statistics])
}
