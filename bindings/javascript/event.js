// source: io/openisms/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.io.openisms.v1.Event');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.io.openisms.v1.Certification');
goog.require('proto.io.openisms.v1.Meta');
goog.require('proto.io.openisms.v1.Pentest');
goog.require('proto.io.openisms.v1.PhysicalObject');
goog.require('proto.io.openisms.v1.Repository');
goog.require('proto.io.openisms.v1.SourceSystem');
goog.require('proto.io.openisms.v1.Statistics');
goog.require('proto.io.openisms.v1.User');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.openisms.v1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.openisms.v1.Event.repeatedFields_, null);
};
goog.inherits(proto.io.openisms.v1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.openisms.v1.Event.displayName = 'proto.io.openisms.v1.Event';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.openisms.v1.Event.repeatedFields_ = [3,4,7,9,11,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.openisms.v1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.io.openisms.v1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.openisms.v1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.openisms.v1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    meta: (f = msg.getMeta()) && proto.io.openisms.v1.Meta.toObject(includeInstance, f),
    source: (f = msg.getSource()) && proto.io.openisms.v1.SourceSystem.toObject(includeInstance, f),
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.io.openisms.v1.User.toObject, includeInstance),
    devicesList: jspb.Message.toObjectList(msg.getDevicesList(),
    proto.io.openisms.v1.PhysicalObject.toObject, includeInstance),
    repositoriesList: jspb.Message.toObjectList(msg.getRepositoriesList(),
    proto.io.openisms.v1.Repository.toObject, includeInstance),
    certificationList: jspb.Message.toObjectList(msg.getCertificationList(),
    proto.io.openisms.v1.Certification.toObject, includeInstance),
    pentestList: jspb.Message.toObjectList(msg.getPentestList(),
    proto.io.openisms.v1.Pentest.toObject, includeInstance),
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    proto.io.openisms.v1.Statistics.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.openisms.v1.Event}
 */
proto.io.openisms.v1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.openisms.v1.Event;
  return proto.io.openisms.v1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.openisms.v1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.openisms.v1.Event}
 */
proto.io.openisms.v1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.io.openisms.v1.Meta;
      reader.readMessage(value,proto.io.openisms.v1.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 2:
      var value = new proto.io.openisms.v1.SourceSystem;
      reader.readMessage(value,proto.io.openisms.v1.SourceSystem.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 3:
      var value = new proto.io.openisms.v1.User;
      reader.readMessage(value,proto.io.openisms.v1.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 4:
      var value = new proto.io.openisms.v1.PhysicalObject;
      reader.readMessage(value,proto.io.openisms.v1.PhysicalObject.deserializeBinaryFromReader);
      msg.addDevices(value);
      break;
    case 7:
      var value = new proto.io.openisms.v1.Repository;
      reader.readMessage(value,proto.io.openisms.v1.Repository.deserializeBinaryFromReader);
      msg.addRepositories(value);
      break;
    case 9:
      var value = new proto.io.openisms.v1.Certification;
      reader.readMessage(value,proto.io.openisms.v1.Certification.deserializeBinaryFromReader);
      msg.addCertification(value);
      break;
    case 11:
      var value = new proto.io.openisms.v1.Pentest;
      reader.readMessage(value,proto.io.openisms.v1.Pentest.deserializeBinaryFromReader);
      msg.addPentest(value);
      break;
    case 13:
      var value = new proto.io.openisms.v1.Statistics;
      reader.readMessage(value,proto.io.openisms.v1.Statistics.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.openisms.v1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.openisms.v1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.openisms.v1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.openisms.v1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.io.openisms.v1.Meta.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.openisms.v1.SourceSystem.serializeBinaryToWriter
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.io.openisms.v1.User.serializeBinaryToWriter
    );
  }
  f = message.getDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.io.openisms.v1.PhysicalObject.serializeBinaryToWriter
    );
  }
  f = message.getRepositoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.io.openisms.v1.Repository.serializeBinaryToWriter
    );
  }
  f = message.getCertificationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.io.openisms.v1.Certification.serializeBinaryToWriter
    );
  }
  f = message.getPentestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.io.openisms.v1.Pentest.serializeBinaryToWriter
    );
  }
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.io.openisms.v1.Statistics.serializeBinaryToWriter
    );
  }
};


/**
 * optional Meta meta = 1;
 * @return {?proto.io.openisms.v1.Meta}
 */
proto.io.openisms.v1.Event.prototype.getMeta = function() {
  return /** @type{?proto.io.openisms.v1.Meta} */ (
    jspb.Message.getWrapperField(this, proto.io.openisms.v1.Meta, 1));
};


/**
 * @param {?proto.io.openisms.v1.Meta|undefined} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.openisms.v1.Event.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SourceSystem source = 2;
 * @return {?proto.io.openisms.v1.SourceSystem}
 */
proto.io.openisms.v1.Event.prototype.getSource = function() {
  return /** @type{?proto.io.openisms.v1.SourceSystem} */ (
    jspb.Message.getWrapperField(this, proto.io.openisms.v1.SourceSystem, 2));
};


/**
 * @param {?proto.io.openisms.v1.SourceSystem|undefined} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.openisms.v1.Event.prototype.hasSource = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated User users = 3;
 * @return {!Array<!proto.io.openisms.v1.User>}
 */
proto.io.openisms.v1.Event.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.User, 3));
};


/**
 * @param {!Array<!proto.io.openisms.v1.User>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.io.openisms.v1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.User}
 */
proto.io.openisms.v1.Event.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.io.openisms.v1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * repeated PhysicalObject devices = 4;
 * @return {!Array<!proto.io.openisms.v1.PhysicalObject>}
 */
proto.io.openisms.v1.Event.prototype.getDevicesList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.PhysicalObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.PhysicalObject, 4));
};


/**
 * @param {!Array<!proto.io.openisms.v1.PhysicalObject>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.io.openisms.v1.PhysicalObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.PhysicalObject}
 */
proto.io.openisms.v1.Event.prototype.addDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.io.openisms.v1.PhysicalObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearDevicesList = function() {
  return this.setDevicesList([]);
};


/**
 * repeated Repository repositories = 7;
 * @return {!Array<!proto.io.openisms.v1.Repository>}
 */
proto.io.openisms.v1.Event.prototype.getRepositoriesList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.Repository>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.Repository, 7));
};


/**
 * @param {!Array<!proto.io.openisms.v1.Repository>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setRepositoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.io.openisms.v1.Repository=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Repository}
 */
proto.io.openisms.v1.Event.prototype.addRepositories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.io.openisms.v1.Repository, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearRepositoriesList = function() {
  return this.setRepositoriesList([]);
};


/**
 * repeated Certification certification = 9;
 * @return {!Array<!proto.io.openisms.v1.Certification>}
 */
proto.io.openisms.v1.Event.prototype.getCertificationList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.Certification>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.Certification, 9));
};


/**
 * @param {!Array<!proto.io.openisms.v1.Certification>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setCertificationList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.io.openisms.v1.Certification=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Certification}
 */
proto.io.openisms.v1.Event.prototype.addCertification = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.io.openisms.v1.Certification, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearCertificationList = function() {
  return this.setCertificationList([]);
};


/**
 * repeated Pentest pentest = 11;
 * @return {!Array<!proto.io.openisms.v1.Pentest>}
 */
proto.io.openisms.v1.Event.prototype.getPentestList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.Pentest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.Pentest, 11));
};


/**
 * @param {!Array<!proto.io.openisms.v1.Pentest>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setPentestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.io.openisms.v1.Pentest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Pentest}
 */
proto.io.openisms.v1.Event.prototype.addPentest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.io.openisms.v1.Pentest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearPentestList = function() {
  return this.setPentestList([]);
};


/**
 * repeated Statistics stats = 13;
 * @return {!Array<!proto.io.openisms.v1.Statistics>}
 */
proto.io.openisms.v1.Event.prototype.getStatsList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.Statistics>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.Statistics, 13));
};


/**
 * @param {!Array<!proto.io.openisms.v1.Statistics>} value
 * @return {!proto.io.openisms.v1.Event} returns this
*/
proto.io.openisms.v1.Event.prototype.setStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.io.openisms.v1.Statistics=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Statistics}
 */
proto.io.openisms.v1.Event.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.io.openisms.v1.Statistics, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Event} returns this
 */
proto.io.openisms.v1.Event.prototype.clearStatsList = function() {
  return this.setStatsList([]);
};


