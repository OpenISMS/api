// source: io/openisms/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.io.openisms.v1.Pentest');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.io.openisms.v1.Company');
goog.require('proto.io.openisms.v1.Date');
goog.require('proto.io.openisms.v1.Person');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.io.openisms.v1.Pentest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.io.openisms.v1.Pentest.repeatedFields_, null);
};
goog.inherits(proto.io.openisms.v1.Pentest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.io.openisms.v1.Pentest.displayName = 'proto.io.openisms.v1.Pentest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.io.openisms.v1.Pentest.repeatedFields_ = [9,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.io.openisms.v1.Pentest.prototype.toObject = function(opt_includeInstance) {
  return proto.io.openisms.v1.Pentest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.io.openisms.v1.Pentest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.openisms.v1.Pentest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    begin: (f = msg.getBegin()) && proto.io.openisms.v1.Date.toObject(includeInstance, f),
    end: (f = msg.getEnd()) && proto.io.openisms.v1.Date.toObject(includeInstance, f),
    company: (f = msg.getCompany()) && proto.io.openisms.v1.Company.toObject(includeInstance, f),
    focus: jspb.Message.getFieldWithDefault(msg, 5, ""),
    passed: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    result: jspb.Message.getFieldWithDefault(msg, 7, ""),
    url: jspb.Message.getFieldWithDefault(msg, 8, ""),
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    proto.io.openisms.v1.Person.toObject, includeInstance),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.io.openisms.v1.Pentest}
 */
proto.io.openisms.v1.Pentest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.io.openisms.v1.Pentest;
  return proto.io.openisms.v1.Pentest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.io.openisms.v1.Pentest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.io.openisms.v1.Pentest}
 */
proto.io.openisms.v1.Pentest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.io.openisms.v1.Date;
      reader.readMessage(value,proto.io.openisms.v1.Date.deserializeBinaryFromReader);
      msg.setBegin(value);
      break;
    case 3:
      var value = new proto.io.openisms.v1.Date;
      reader.readMessage(value,proto.io.openisms.v1.Date.deserializeBinaryFromReader);
      msg.setEnd(value);
      break;
    case 4:
      var value = new proto.io.openisms.v1.Company;
      reader.readMessage(value,proto.io.openisms.v1.Company.deserializeBinaryFromReader);
      msg.setCompany(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFocus(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPassed(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setResult(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 9:
      var value = new proto.io.openisms.v1.Person;
      reader.readMessage(value,proto.io.openisms.v1.Person.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.io.openisms.v1.Pentest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.io.openisms.v1.Pentest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.io.openisms.v1.Pentest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.io.openisms.v1.Pentest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBegin();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.io.openisms.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getEnd();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.io.openisms.v1.Date.serializeBinaryToWriter
    );
  }
  f = message.getCompany();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.io.openisms.v1.Company.serializeBinaryToWriter
    );
  }
  f = message.getFocus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassed();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getResult();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.io.openisms.v1.Person.serializeBinaryToWriter
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.io.openisms.v1.Pentest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Date begin = 2;
 * @return {?proto.io.openisms.v1.Date}
 */
proto.io.openisms.v1.Pentest.prototype.getBegin = function() {
  return /** @type{?proto.io.openisms.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.io.openisms.v1.Date, 2));
};


/**
 * @param {?proto.io.openisms.v1.Date|undefined} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
*/
proto.io.openisms.v1.Pentest.prototype.setBegin = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.clearBegin = function() {
  return this.setBegin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.openisms.v1.Pentest.prototype.hasBegin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Date end = 3;
 * @return {?proto.io.openisms.v1.Date}
 */
proto.io.openisms.v1.Pentest.prototype.getEnd = function() {
  return /** @type{?proto.io.openisms.v1.Date} */ (
    jspb.Message.getWrapperField(this, proto.io.openisms.v1.Date, 3));
};


/**
 * @param {?proto.io.openisms.v1.Date|undefined} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
*/
proto.io.openisms.v1.Pentest.prototype.setEnd = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.clearEnd = function() {
  return this.setEnd(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.openisms.v1.Pentest.prototype.hasEnd = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Company company = 4;
 * @return {?proto.io.openisms.v1.Company}
 */
proto.io.openisms.v1.Pentest.prototype.getCompany = function() {
  return /** @type{?proto.io.openisms.v1.Company} */ (
    jspb.Message.getWrapperField(this, proto.io.openisms.v1.Company, 4));
};


/**
 * @param {?proto.io.openisms.v1.Company|undefined} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
*/
proto.io.openisms.v1.Pentest.prototype.setCompany = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.clearCompany = function() {
  return this.setCompany(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.io.openisms.v1.Pentest.prototype.hasCompany = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string focus = 5;
 * @return {string}
 */
proto.io.openisms.v1.Pentest.prototype.getFocus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setFocus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool passed = 6;
 * @return {boolean}
 */
proto.io.openisms.v1.Pentest.prototype.getPassed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setPassed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string result = 7;
 * @return {string}
 */
proto.io.openisms.v1.Pentest.prototype.getResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setResult = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string url = 8;
 * @return {string}
 */
proto.io.openisms.v1.Pentest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated Person contacts = 9;
 * @return {!Array<!proto.io.openisms.v1.Person>}
 */
proto.io.openisms.v1.Pentest.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.io.openisms.v1.Person>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.io.openisms.v1.Person, 9));
};


/**
 * @param {!Array<!proto.io.openisms.v1.Person>} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
*/
proto.io.openisms.v1.Pentest.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.io.openisms.v1.Person=} opt_value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Person}
 */
proto.io.openisms.v1.Pentest.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.io.openisms.v1.Person, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * repeated string tags = 10;
 * @return {!Array<string>}
 */
proto.io.openisms.v1.Pentest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.io.openisms.v1.Pentest} returns this
 */
proto.io.openisms.v1.Pentest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


