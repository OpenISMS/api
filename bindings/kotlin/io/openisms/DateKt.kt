//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: io/openisms/api.proto

package io.openisms;

@kotlin.jvm.JvmName("-initializedate")
public inline fun date(block: io.openisms.DateKt.Dsl.() -> kotlin.Unit): io.openisms.Api.Date =
  io.openisms.DateKt.Dsl._create(io.openisms.Api.Date.newBuilder()).apply { block() }._build()
public object DateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.openisms.Api.Date.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.openisms.Api.Date.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.openisms.Api.Date = _builder.build()

    /**
     * <pre>
     * Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * </pre>
     *
     * <code>int32 year = 1;</code>
     */
    public var year: kotlin.Int
      @JvmName("getYear")
      get() = _builder.getYear()
      @JvmName("setYear")
      set(value) {
        _builder.setYear(value)
      }
    /**
     * <pre>
     * Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
     * </pre>
     *
     * <code>int32 year = 1;</code>
     */
    public fun clearYear() {
      _builder.clearYear()
    }

    /**
     * <pre>
     * Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * </pre>
     *
     * <code>int32 month = 2;</code>
     */
    public var month: kotlin.Int
      @JvmName("getMonth")
      get() = _builder.getMonth()
      @JvmName("setMonth")
      set(value) {
        _builder.setMonth(value)
      }
    /**
     * <pre>
     * Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
     * </pre>
     *
     * <code>int32 month = 2;</code>
     */
    public fun clearMonth() {
      _builder.clearMonth()
    }

    /**
     * <pre>
     * Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a
     * year by itself or a year and month where the day isn't significant.
     * </pre>
     *
     * <code>int32 day = 3;</code>
     */
    public var day: kotlin.Int
      @JvmName("getDay")
      get() = _builder.getDay()
      @JvmName("setDay")
      set(value) {
        _builder.setDay(value)
      }
    /**
     * <pre>
     * Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a
     * year by itself or a year and month where the day isn't significant.
     * </pre>
     *
     * <code>int32 day = 3;</code>
     */
    public fun clearDay() {
      _builder.clearDay()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.openisms.Api.Date.copy(block: io.openisms.DateKt.Dsl.() -> kotlin.Unit): io.openisms.Api.Date =
  io.openisms.DateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

