//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: io/openisms/api.proto

package io.openisms;

@kotlin.jvm.JvmName("-initializephoto")
public inline fun photo(block: io.openisms.PhotoKt.Dsl.() -> kotlin.Unit): io.openisms.Api.Photo =
  io.openisms.PhotoKt.Dsl._create(io.openisms.Api.Photo.newBuilder()).apply { block() }._build()
public object PhotoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: io.openisms.Api.Photo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: io.openisms.Api.Photo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): io.openisms.Api.Photo = _builder.build()

    /**
     * <code>string url = 1;</code>
     */
    public var url: kotlin.String
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * <code>string url = 1;</code>
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }

    /**
     * <code>string base_64_encoded = 2;</code>
     */
    public var base64Encoded: kotlin.String
      @JvmName("getBase64Encoded")
      get() = _builder.getBase64Encoded()
      @JvmName("setBase64Encoded")
      set(value) {
        _builder.setBase64Encoded(value)
      }
    /**
     * <code>string base_64_encoded = 2;</code>
     */
    public fun clearBase64Encoded() {
      _builder.clearBase64Encoded()
    }

    /**
     * <code>string mime_type = 3;</code>
     */
    public var mimeType: kotlin.String
      @JvmName("getMimeType")
      get() = _builder.getMimeType()
      @JvmName("setMimeType")
      set(value) {
        _builder.setMimeType(value)
      }
    /**
     * <code>string mime_type = 3;</code>
     */
    public fun clearMimeType() {
      _builder.clearMimeType()
    }

    /**
     * <code>string etag = 4;</code>
     */
    public var etag: kotlin.String
      @JvmName("getEtag")
      get() = _builder.getEtag()
      @JvmName("setEtag")
      set(value) {
        _builder.setEtag(value)
      }
    /**
     * <code>string etag = 4;</code>
     */
    public fun clearEtag() {
      _builder.clearEtag()
    }

    /**
     * <code>.google.protobuf.Timestamp last_modified = 5;</code>
     */
    public var lastModified: com.google.protobuf.Timestamp
      @JvmName("getLastModified")
      get() = _builder.getLastModified()
      @JvmName("setLastModified")
      set(value) {
        _builder.setLastModified(value)
      }
    /**
     * <code>.google.protobuf.Timestamp last_modified = 5;</code>
     */
    public fun clearLastModified() {
      _builder.clearLastModified()
    }
    /**
     * <code>.google.protobuf.Timestamp last_modified = 5;</code>
     * @return Whether the lastModified field is set.
     */
    public fun hasLastModified(): kotlin.Boolean {
      return _builder.hasLastModified()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun io.openisms.Api.Photo.copy(block: io.openisms.PhotoKt.Dsl.() -> kotlin.Unit): io.openisms.Api.Photo =
  io.openisms.PhotoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val io.openisms.Api.PhotoOrBuilder.lastModifiedOrNull: com.google.protobuf.Timestamp?
  get() = if (hasLastModified()) getLastModified() else null

