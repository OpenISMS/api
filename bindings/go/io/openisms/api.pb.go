// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: io/openisms/api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Visibility int32

const (
	Visibility_undefined    Visibility = 0
	Visibility_public       Visibility = 1
	Visibility_internal     Visibility = 2 // private
	Visibility_confidential Visibility = 3
)

// Enum value maps for Visibility.
var (
	Visibility_name = map[int32]string{
		0: "undefined",
		1: "public",
		2: "internal",
		3: "confidential",
	}
	Visibility_value = map[string]int32{
		"undefined":    0,
		"public":       1,
		"internal":     2,
		"confidential": 3,
	}
)

func (x Visibility) Enum() *Visibility {
	p := new(Visibility)
	*p = x
	return p
}

func (x Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_io_openisms_api_proto_enumTypes[0].Descriptor()
}

func (Visibility) Type() protoreflect.EnumType {
	return &file_io_openisms_api_proto_enumTypes[0]
}

func (x Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visibility.Descriptor instead.
func (Visibility) EnumDescriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{0}
}

type SourceSystem_SourceType int32

const (
	SourceSystem_undefined SourceSystem_SourceType = 0
	// Infrastructure
	SourceSystem_identity_provider         SourceSystem_SourceType = 1 // IdP, IAM, Google Workspace, Okta, Identity Management, Cloud Directory, Active Directory, Access Management, SAML
	SourceSystem_source_control_management SourceSystem_SourceType = 2
	SourceSystem_cloud_provider            SourceSystem_SourceType = 3 // AWS, Google Cloud, Azure, Hetzner, OVH
	SourceSystem_database                  SourceSystem_SourceType = 4
	SourceSystem_network                   SourceSystem_SourceType = 5 // Tailscale, Wireguard, VPN, Cloudflare
	// Devices & Security, connected to laptops
	SourceSystem_device_management SourceSystem_SourceType = 10 // jamf, SimpleMDM
	SourceSystem_security_software SourceSystem_SourceType = 11 // Anti-virus
	SourceSystem_password_manager  SourceSystem_SourceType = 12 // MFA, 1Password
	// Tools & SaaS
	SourceSystem_communication                    SourceSystem_SourceType = 20 // Slack, E-Mail
	SourceSystem_human_resources                  SourceSystem_SourceType = 21 // HR, Personio, BambooHR
	SourceSystem_content_management_system        SourceSystem_SourceType = 22 // CMS, Notion, Confluence, WordPress
	SourceSystem_ticketing                        SourceSystem_SourceType = 23 // Jira, Trello, Asana, Monday.com, airfocus
	SourceSystem_customer_relationship_management SourceSystem_SourceType = 24 // CRM
	SourceSystem_finance                          SourceSystem_SourceType = 25 // Stripe, invoice handling
	SourceSystem_analytics                        SourceSystem_SourceType = 26
)

// Enum value maps for SourceSystem_SourceType.
var (
	SourceSystem_SourceType_name = map[int32]string{
		0:  "undefined",
		1:  "identity_provider",
		2:  "source_control_management",
		3:  "cloud_provider",
		4:  "database",
		5:  "network",
		10: "device_management",
		11: "security_software",
		12: "password_manager",
		20: "communication",
		21: "human_resources",
		22: "content_management_system",
		23: "ticketing",
		24: "customer_relationship_management",
		25: "finance",
		26: "analytics",
	}
	SourceSystem_SourceType_value = map[string]int32{
		"undefined":                        0,
		"identity_provider":                1,
		"source_control_management":        2,
		"cloud_provider":                   3,
		"database":                         4,
		"network":                          5,
		"device_management":                10,
		"security_software":                11,
		"password_manager":                 12,
		"communication":                    20,
		"human_resources":                  21,
		"content_management_system":        22,
		"ticketing":                        23,
		"customer_relationship_management": 24,
		"finance":                          25,
		"analytics":                        26,
	}
)

func (x SourceSystem_SourceType) Enum() *SourceSystem_SourceType {
	p := new(SourceSystem_SourceType)
	*p = x
	return p
}

func (x SourceSystem_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceSystem_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_io_openisms_api_proto_enumTypes[1].Descriptor()
}

func (SourceSystem_SourceType) Type() protoreflect.EnumType {
	return &file_io_openisms_api_proto_enumTypes[1]
}

func (x SourceSystem_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceSystem_SourceType.Descriptor instead.
func (SourceSystem_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{2, 0}
}

type OperatingSystem_OperatingSystems int32

const (
	OperatingSystem_undefined OperatingSystem_OperatingSystems = 0
	OperatingSystem_macos     OperatingSystem_OperatingSystems = 1
	OperatingSystem_windows   OperatingSystem_OperatingSystems = 2
	OperatingSystem_linux     OperatingSystem_OperatingSystems = 3
	OperatingSystem_unix      OperatingSystem_OperatingSystems = 4
	OperatingSystem_chrome_os OperatingSystem_OperatingSystems = 5
	OperatingSystem_ios       OperatingSystem_OperatingSystems = 10
	OperatingSystem_android   OperatingSystem_OperatingSystems = 11
	OperatingSystem_ros       OperatingSystem_OperatingSystems = 14
	OperatingSystem_other     OperatingSystem_OperatingSystems = 15
)

// Enum value maps for OperatingSystem_OperatingSystems.
var (
	OperatingSystem_OperatingSystems_name = map[int32]string{
		0:  "undefined",
		1:  "macos",
		2:  "windows",
		3:  "linux",
		4:  "unix",
		5:  "chrome_os",
		10: "ios",
		11: "android",
		14: "ros",
		15: "other",
	}
	OperatingSystem_OperatingSystems_value = map[string]int32{
		"undefined": 0,
		"macos":     1,
		"windows":   2,
		"linux":     3,
		"unix":      4,
		"chrome_os": 5,
		"ios":       10,
		"android":   11,
		"ros":       14,
		"other":     15,
	}
)

func (x OperatingSystem_OperatingSystems) Enum() *OperatingSystem_OperatingSystems {
	p := new(OperatingSystem_OperatingSystems)
	*p = x
	return p
}

func (x OperatingSystem_OperatingSystems) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatingSystem_OperatingSystems) Descriptor() protoreflect.EnumDescriptor {
	return file_io_openisms_api_proto_enumTypes[2].Descriptor()
}

func (OperatingSystem_OperatingSystems) Type() protoreflect.EnumType {
	return &file_io_openisms_api_proto_enumTypes[2]
}

func (x OperatingSystem_OperatingSystems) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatingSystem_OperatingSystems.Descriptor instead.
func (OperatingSystem_OperatingSystems) EnumDescriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{12, 0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta          *Meta             `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Source        *SourceSystem     `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Users         []*User           `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
	Devices       []*PhysicalObject `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
	Repositories  []*Repository     `protobuf:"bytes,7,rep,name=repositories,proto3" json:"repositories,omitempty"`
	Certification []*Certification  `protobuf:"bytes,9,rep,name=certification,proto3" json:"certification,omitempty"`
	Pentest       []*Pentest        `protobuf:"bytes,11,rep,name=pentest,proto3" json:"pentest,omitempty"`
	Stats         []*Statistics     `protobuf:"bytes,13,rep,name=stats,proto3" json:"stats,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Event) GetSource() *SourceSystem {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Event) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Event) GetDevices() []*PhysicalObject {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *Event) GetRepositories() []*Repository {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *Event) GetCertification() []*Certification {
	if x != nil {
		return x.Certification
	}
	return nil
}

func (x *Event) GetPentest() []*Pentest {
	if x != nil {
		return x.Pentest
	}
	return nil
}

func (x *Event) GetStats() []*Statistics {
	if x != nil {
		return x.Stats
	}
	return nil
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Identifier string                 `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Etag       string                 `protobuf:"bytes,3,opt,name=etag,proto3" json:"etag,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{1}
}

func (x *Meta) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Meta) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Meta) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type SourceSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Vendor  string                  `protobuf:"bytes,2,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Url     string                  `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	LogoUrl string                  `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	Type    SourceSystem_SourceType `protobuf:"varint,5,opt,name=type,proto3,enum=io.openisms.v1.SourceSystem_SourceType" json:"type,omitempty"`
}

func (x *SourceSystem) Reset() {
	*x = SourceSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceSystem) ProtoMessage() {}

func (x *SourceSystem) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceSystem.ProtoReflect.Descriptor instead.
func (*SourceSystem) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{2}
}

func (x *SourceSystem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceSystem) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *SourceSystem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SourceSystem) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *SourceSystem) GetType() SourceSystem_SourceType {
	if x != nil {
		return x.Type
	}
	return SourceSystem_undefined
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Person               *Person               `protobuf:"bytes,1,opt,name=person,proto3" json:"person,omitempty"`
	SecondFactorActive   *wrapperspb.BoolValue `protobuf:"bytes,5,opt,name=second_factor_active,json=secondFactorActive,proto3" json:"second_factor_active,omitempty"`
	SecondFactorEnforced *wrapperspb.BoolValue `protobuf:"bytes,6,opt,name=second_factor_enforced,json=secondFactorEnforced,proto3" json:"second_factor_enforced,omitempty"`
	Active               *wrapperspb.BoolValue `protobuf:"bytes,7,opt,name=active,proto3" json:"active,omitempty"`
	Suspended            *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=suspended,proto3" json:"suspended,omitempty"`
	Disabled             *wrapperspb.BoolValue `protobuf:"bytes,9,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Deleted              *wrapperspb.BoolValue `protobuf:"bytes,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Groups               []string              `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`
	Privileges           []string              `protobuf:"bytes,16,rep,name=privileges,proto3" json:"privileges,omitempty"`
	Employment           *Employment           `protobuf:"bytes,20,opt,name=employment,proto3" json:"employment,omitempty"`
	ConnectedAccounts    []*ConnectedAccount   `protobuf:"bytes,21,rep,name=connected_accounts,json=connectedAccounts,proto3" json:"connected_accounts,omitempty"` // via SSO, SAML, OIDC
	Possessions          []*PhysicalObject     `protobuf:"bytes,22,rep,name=possessions,proto3" json:"possessions,omitempty"`                                      // Laptop, Phone, Adaptor
	Tags                 []string              `protobuf:"bytes,40,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{3}
}

func (x *User) GetPerson() *Person {
	if x != nil {
		return x.Person
	}
	return nil
}

func (x *User) GetSecondFactorActive() *wrapperspb.BoolValue {
	if x != nil {
		return x.SecondFactorActive
	}
	return nil
}

func (x *User) GetSecondFactorEnforced() *wrapperspb.BoolValue {
	if x != nil {
		return x.SecondFactorEnforced
	}
	return nil
}

func (x *User) GetActive() *wrapperspb.BoolValue {
	if x != nil {
		return x.Active
	}
	return nil
}

func (x *User) GetSuspended() *wrapperspb.BoolValue {
	if x != nil {
		return x.Suspended
	}
	return nil
}

func (x *User) GetDisabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.Disabled
	}
	return nil
}

func (x *User) GetDeleted() *wrapperspb.BoolValue {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *User) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *User) GetPrivileges() []string {
	if x != nil {
		return x.Privileges
	}
	return nil
}

func (x *User) GetEmployment() *Employment {
	if x != nil {
		return x.Employment
	}
	return nil
}

func (x *User) GetConnectedAccounts() []*ConnectedAccount {
	if x != nil {
		return x.ConnectedAccounts
	}
	return nil
}

func (x *User) GetPossessions() []*PhysicalObject {
	if x != nil {
		return x.Possessions
	}
	return nil
}

func (x *User) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         *Name                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PrimaryEmail string                 `protobuf:"bytes,3,opt,name=primary_email,json=primaryEmail,proto3" json:"primary_email,omitempty"`
	OtherEmails  []string               `protobuf:"bytes,4,rep,name=other_emails,json=otherEmails,proto3" json:"other_emails,omitempty"`
	Picture      *Photo                 `protobuf:"bytes,5,opt,name=picture,proto3" json:"picture,omitempty"`
	Company      string                 `protobuf:"bytes,6,opt,name=company,proto3" json:"company,omitempty"`
	Created      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created,proto3" json:"created,omitempty"` // technical date
	Updated      *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated,proto3" json:"updated,omitempty"` // technical date
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{4}
}

func (x *Person) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Person) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Person) GetPrimaryEmail() string {
	if x != nil {
		return x.PrimaryEmail
	}
	return ""
}

func (x *Person) GetOtherEmails() []string {
	if x != nil {
		return x.OtherEmails
	}
	return nil
}

func (x *Person) GetPicture() *Photo {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *Person) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Person) GetCreated() *timestamppb.Timestamp {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Person) GetUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.Updated
	}
	return nil
}

type Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GivenName  string `protobuf:"bytes,1,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName string `protobuf:"bytes,2,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	FullName   string `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Title      string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`       // Dr., Sir
	Position   string `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"` // CEO, CTO
	Role       string `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`         // Developer, Customer Support Agent
}

func (x *Name) Reset() {
	*x = Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Name) ProtoMessage() {}

func (x *Name) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Name.ProtoReflect.Descriptor instead.
func (*Name) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{5}
}

func (x *Name) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *Name) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *Name) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *Name) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Name) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Name) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Base_64Encoded string                 `protobuf:"bytes,2,opt,name=base_64_encoded,json=base64Encoded,proto3" json:"base_64_encoded,omitempty"`
	MimeType       string                 `protobuf:"bytes,3,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	Etag           string                 `protobuf:"bytes,4,opt,name=etag,proto3" json:"etag,omitempty"`
	LastModified   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{6}
}

func (x *Photo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Photo) GetBase_64Encoded() string {
	if x != nil {
		return x.Base_64Encoded
	}
	return ""
}

func (x *Photo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Photo) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Photo) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

type Employment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"` // full-time, intern, consultant
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`     // candidate, hired, active, hiatus, terminated, left
	Begin    *Date  `protobuf:"bytes,3,opt,name=begin,proto3" json:"begin,omitempty"`
	End      *Date  `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Employment) Reset() {
	*x = Employment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Employment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Employment) ProtoMessage() {}

func (x *Employment) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Employment.ProtoReflect.Descriptor instead.
func (*Employment) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{7}
}

func (x *Employment) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Employment) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Employment) GetBegin() *Date {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *Employment) GetEnd() *Date {
	if x != nil {
		return x.End
	}
	return nil
}

type ConnectedAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId   string   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppName string   `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	AppType string   `protobuf:"bytes,3,opt,name=app_type,json=appType,proto3" json:"app_type,omitempty"`
	AppUrl  string   `protobuf:"bytes,4,opt,name=app_url,json=appUrl,proto3" json:"app_url,omitempty"`
	UserId  string   `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scopes  []string `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ConnectedAccount) Reset() {
	*x = ConnectedAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedAccount) ProtoMessage() {}

func (x *ConnectedAccount) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedAccount.ProtoReflect.Descriptor instead.
func (*ConnectedAccount) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{8}
}

func (x *ConnectedAccount) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ConnectedAccount) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ConnectedAccount) GetAppType() string {
	if x != nil {
		return x.AppType
	}
	return ""
}

func (x *ConnectedAccount) GetAppUrl() string {
	if x != nil {
		return x.AppUrl
	}
	return ""
}

func (x *ConnectedAccount) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConnectedAccount) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type PhysicalObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         string            `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Name         string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Manufacturer string            `protobuf:"bytes,3,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Vendor       string            `protobuf:"bytes,4,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Identifier   string            `protobuf:"bytes,5,opt,name=identifier,proto3" json:"identifier,omitempty"` // company-internal
	SerialNumber string            `protobuf:"bytes,6,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	Imei         string            `protobuf:"bytes,7,opt,name=imei,proto3" json:"imei,omitempty"`
	Meid         string            `protobuf:"bytes,8,opt,name=meid,proto3" json:"meid,omitempty"`
	Networks     []*Network        `protobuf:"bytes,9,rep,name=networks,proto3" json:"networks,omitempty"`
	Hostname     string            `protobuf:"bytes,10,opt,name=hostname,proto3" json:"hostname,omitempty"`
	UserAccounts []string          `protobuf:"bytes,11,rep,name=user_accounts,json=userAccounts,proto3" json:"user_accounts,omitempty"`
	Os           *OperatingSystem  `protobuf:"bytes,12,opt,name=os,proto3" json:"os,omitempty"`
	Security     *SecurityFeatures `protobuf:"bytes,13,opt,name=security,proto3" json:"security,omitempty"`
	Profiles     []*Profile        `protobuf:"bytes,14,rep,name=profiles,proto3" json:"profiles,omitempty"`
	Apps         []*Application    `protobuf:"bytes,15,rep,name=apps,proto3" json:"apps,omitempty"`
	Tags         []string          `protobuf:"bytes,20,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *PhysicalObject) Reset() {
	*x = PhysicalObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhysicalObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhysicalObject) ProtoMessage() {}

func (x *PhysicalObject) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhysicalObject.ProtoReflect.Descriptor instead.
func (*PhysicalObject) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{9}
}

func (x *PhysicalObject) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PhysicalObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PhysicalObject) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *PhysicalObject) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *PhysicalObject) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *PhysicalObject) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *PhysicalObject) GetImei() string {
	if x != nil {
		return x.Imei
	}
	return ""
}

func (x *PhysicalObject) GetMeid() string {
	if x != nil {
		return x.Meid
	}
	return ""
}

func (x *PhysicalObject) GetNetworks() []*Network {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *PhysicalObject) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PhysicalObject) GetUserAccounts() []string {
	if x != nil {
		return x.UserAccounts
	}
	return nil
}

func (x *PhysicalObject) GetOs() *OperatingSystem {
	if x != nil {
		return x.Os
	}
	return nil
}

func (x *PhysicalObject) GetSecurity() *SecurityFeatures {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *PhysicalObject) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *PhysicalObject) GetApps() []*Application {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *PhysicalObject) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SecurityFeatures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivationLock      *wrapperspb.BoolValue  `protobuf:"bytes,1,opt,name=activation_lock,json=activationLock,proto3" json:"activation_lock,omitempty"`
	Supervised          *wrapperspb.BoolValue  `protobuf:"bytes,2,opt,name=supervised,proto3" json:"supervised,omitempty"`
	FileVault           *wrapperspb.BoolValue  `protobuf:"bytes,3,opt,name=file_vault,json=fileVault,proto3" json:"file_vault,omitempty"`
	FullDiskEncryption  *wrapperspb.BoolValue  `protobuf:"bytes,4,opt,name=full_disk_encryption,json=fullDiskEncryption,proto3" json:"full_disk_encryption,omitempty"`
	SecurePassword      *wrapperspb.BoolValue  `protobuf:"bytes,5,opt,name=secure_password,json=securePassword,proto3" json:"secure_password,omitempty"`
	AutomaticScreenLock *wrapperspb.BoolValue  `protobuf:"bytes,6,opt,name=automatic_screen_lock,json=automaticScreenLock,proto3" json:"automatic_screen_lock,omitempty"`
	ScreenLockAfter     *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=screen_lock_after,json=screenLockAfter,proto3" json:"screen_lock_after,omitempty"`
	FirewallEnabled     *wrapperspb.BoolValue  `protobuf:"bytes,8,opt,name=firewall_enabled,json=firewallEnabled,proto3" json:"firewall_enabled,omitempty"`
	AutomaticUpdates    *wrapperspb.BoolValue  `protobuf:"bytes,9,opt,name=automatic_updates,json=automaticUpdates,proto3" json:"automatic_updates,omitempty"`
}

func (x *SecurityFeatures) Reset() {
	*x = SecurityFeatures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityFeatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityFeatures) ProtoMessage() {}

func (x *SecurityFeatures) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityFeatures.ProtoReflect.Descriptor instead.
func (*SecurityFeatures) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{10}
}

func (x *SecurityFeatures) GetActivationLock() *wrapperspb.BoolValue {
	if x != nil {
		return x.ActivationLock
	}
	return nil
}

func (x *SecurityFeatures) GetSupervised() *wrapperspb.BoolValue {
	if x != nil {
		return x.Supervised
	}
	return nil
}

func (x *SecurityFeatures) GetFileVault() *wrapperspb.BoolValue {
	if x != nil {
		return x.FileVault
	}
	return nil
}

func (x *SecurityFeatures) GetFullDiskEncryption() *wrapperspb.BoolValue {
	if x != nil {
		return x.FullDiskEncryption
	}
	return nil
}

func (x *SecurityFeatures) GetSecurePassword() *wrapperspb.BoolValue {
	if x != nil {
		return x.SecurePassword
	}
	return nil
}

func (x *SecurityFeatures) GetAutomaticScreenLock() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutomaticScreenLock
	}
	return nil
}

func (x *SecurityFeatures) GetScreenLockAfter() *wrapperspb.Int32Value {
	if x != nil {
		return x.ScreenLockAfter
	}
	return nil
}

func (x *SecurityFeatures) GetFirewallEnabled() *wrapperspb.BoolValue {
	if x != nil {
		return x.FirewallEnabled
	}
	return nil
}

func (x *SecurityFeatures) GetAutomaticUpdates() *wrapperspb.BoolValue {
	if x != nil {
		return x.AutomaticUpdates
	}
	return nil
}

type Network struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // ethernet, bluetooth, virtual, gsm, vpc
	MacAddress string `protobuf:"bytes,3,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
}

func (x *Network) Reset() {
	*x = Network{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{11}
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Network) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

type OperatingSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Os           OperatingSystem_OperatingSystems `protobuf:"varint,1,opt,name=os,proto3,enum=io.openisms.v1.OperatingSystem_OperatingSystems" json:"os,omitempty"`
	MajorVersion string                           `protobuf:"bytes,2,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	FullVersion  string                           `protobuf:"bytes,3,opt,name=full_version,json=fullVersion,proto3" json:"full_version,omitempty"`
}

func (x *OperatingSystem) Reset() {
	*x = OperatingSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatingSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatingSystem) ProtoMessage() {}

func (x *OperatingSystem) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatingSystem.ProtoReflect.Descriptor instead.
func (*OperatingSystem) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{12}
}

func (x *OperatingSystem) GetOs() OperatingSystem_OperatingSystems {
	if x != nil {
		return x.Os
	}
	return OperatingSystem_undefined
}

func (x *OperatingSystem) GetMajorVersion() string {
	if x != nil {
		return x.MajorVersion
	}
	return ""
}

func (x *OperatingSystem) GetFullVersion() string {
	if x != nil {
		return x.FullVersion
	}
	return ""
}

type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path               string                `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Vendor             string                `protobuf:"bytes,3,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Url                string                `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Description        string                `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Version            string                `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Signed             *wrapperspb.BoolValue `protobuf:"bytes,7,opt,name=signed,proto3" json:"signed,omitempty"`
	SystemApp          *wrapperspb.BoolValue `protobuf:"bytes,8,opt,name=system_app,json=systemApp,proto3" json:"system_app,omitempty"`
	InstallationSource string                `protobuf:"bytes,9,opt,name=installation_source,json=installationSource,proto3" json:"installation_source,omitempty"` // App Store; homebrew; MDM
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{13}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Application) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *Application) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Application) GetSigned() *wrapperspb.BoolValue {
	if x != nil {
		return x.Signed
	}
	return nil
}

func (x *Application) GetSystemApp() *wrapperspb.BoolValue {
	if x != nil {
		return x.SystemApp
	}
	return nil
}

func (x *Application) GetInstallationSource() string {
	if x != nil {
		return x.InstallationSource
	}
	return ""
}

type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Identifier        string                `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	RemovalAllowed    *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=removal_allowed,json=removalAllowed,proto3" json:"removal_allowed,omitempty"`
	PayloadType       string                `protobuf:"bytes,4,opt,name=payload_type,json=payloadType,proto3" json:"payload_type,omitempty"`
	PayloadIdentifier string                `protobuf:"bytes,5,opt,name=payload_identifier,json=payloadIdentifier,proto3" json:"payload_identifier,omitempty"`
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{14}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Profile) GetRemovalAllowed() *wrapperspb.BoolValue {
	if x != nil {
		return x.RemovalAllowed
	}
	return nil
}

func (x *Profile) GetPayloadType() string {
	if x != nil {
		return x.PayloadType
	}
	return ""
}

func (x *Profile) GetPayloadIdentifier() string {
	if x != nil {
		return x.PayloadIdentifier
	}
	return ""
}

// from https://github.com/googleapis/googleapis/blob/master/google/type/date.proto
type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
	Year int32 `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	// Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
	Month int32 `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	// Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a
	// year by itself or a year and month where the day isn't significant.
	Day int32 `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{15}
}

func (x *Date) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *Date) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *Date) GetDay() int32 {
	if x != nil {
		return x.Day
	}
	return 0
}

type Certification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // ISO27k, SOC2, HIPAA
	Url  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`   // to certificate
	Tags []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Certification) Reset() {
	*x = Certification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certification) ProtoMessage() {}

func (x *Certification) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certification.ProtoReflect.Descriptor instead.
func (*Certification) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{16}
}

func (x *Certification) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Certification) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Certification) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url      string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Category string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Contact  *Person  `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`
	Address  []string `protobuf:"bytes,5,rep,name=address,proto3" json:"address,omitempty"`
}

func (x *Company) Reset() {
	*x = Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Company) ProtoMessage() {}

func (x *Company) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Company.ProtoReflect.Descriptor instead.
func (*Company) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{17}
}

func (x *Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Company) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Company) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Company) GetContact() *Person {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *Company) GetAddress() []string {
	if x != nil {
		return x.Address
	}
	return nil
}

type Pentest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Begin    *Date     `protobuf:"bytes,2,opt,name=begin,proto3" json:"begin,omitempty"`
	End      *Date     `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	Company  *Company  `protobuf:"bytes,4,opt,name=company,proto3" json:"company,omitempty"`
	Focus    string    `protobuf:"bytes,5,opt,name=focus,proto3" json:"focus,omitempty"`
	Passed   bool      `protobuf:"varint,6,opt,name=passed,proto3" json:"passed,omitempty"`
	Result   string    `protobuf:"bytes,7,opt,name=result,proto3" json:"result,omitempty"`
	Url      string    `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	Contacts []*Person `protobuf:"bytes,9,rep,name=contacts,proto3" json:"contacts,omitempty"`
	Tags     []string  `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Pentest) Reset() {
	*x = Pentest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pentest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pentest) ProtoMessage() {}

func (x *Pentest) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pentest.ProtoReflect.Descriptor instead.
func (*Pentest) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{18}
}

func (x *Pentest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Pentest) GetBegin() *Date {
	if x != nil {
		return x.Begin
	}
	return nil
}

func (x *Pentest) GetEnd() *Date {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Pentest) GetCompany() *Company {
	if x != nil {
		return x.Company
	}
	return nil
}

func (x *Pentest) GetFocus() string {
	if x != nil {
		return x.Focus
	}
	return ""
}

func (x *Pentest) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

func (x *Pentest) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *Pentest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Pentest) GetContacts() []*Person {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *Pentest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url                string     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Description        string     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Visibility         Visibility `protobuf:"varint,4,opt,name=visibility,proto3,enum=io.openisms.v1.Visibility" json:"visibility,omitempty"`
	Members            []*Person  `protobuf:"bytes,5,rep,name=members,proto3" json:"members,omitempty"`
	SecurityAttributes []string   `protobuf:"bytes,6,rep,name=security_attributes,json=securityAttributes,proto3" json:"security_attributes,omitempty"` // branch-protection
	Tags               []string   `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{19}
}

func (x *Repository) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Repository) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Repository) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Repository) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_undefined
}

func (x *Repository) GetMembers() []*Person {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *Repository) GetSecurityAttributes() []string {
	if x != nil {
		return x.SecurityAttributes
	}
	return nil
}

func (x *Repository) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Statistics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"` // accounts:num_users, device_management:num_30day_desktop_linux_managed_devices
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // Number of users
	Value      int32  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`          // 42
	Comment    string `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`       // "Does not include suspended users"
}

func (x *Statistics) Reset() {
	*x = Statistics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_io_openisms_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statistics) ProtoMessage() {}

func (x *Statistics) ProtoReflect() protoreflect.Message {
	mi := &file_io_openisms_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statistics.ProtoReflect.Descriptor instead.
func (*Statistics) Descriptor() ([]byte, []int) {
	return file_io_openisms_api_proto_rawDescGZIP(), []int{20}
}

func (x *Statistics) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *Statistics) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Statistics) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Statistics) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_io_openisms_api_proto protoreflect.FileDescriptor

var file_io_openisms_api_proto_rawDesc = []byte{
	0x0a, 0x15, 0x69, 0x6f, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2f, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69,
	0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x38,
	0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0d, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x07, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x65, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x07, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x22, 0x70, 0x0a, 0x04, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x65, 0x74, 0x61, 0x67, 0x22, 0x83, 0x04, 0x0a, 0x0c, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e,
	0x64, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x3b,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69,
	0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xdc, 0x02, 0x0a, 0x0a,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x10,
	0x04, 0x12, 0x0b, 0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x10, 0x05, 0x12, 0x15,
	0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x10, 0x0a, 0x12, 0x15, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x10, 0x0c, 0x12, 0x11, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x14, 0x12, 0x13, 0x0a, 0x0f, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x10, 0x15, 0x12, 0x1d, 0x0a, 0x19, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x10, 0x16, 0x12, 0x0d, 0x0a, 0x09, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x17, 0x12, 0x24, 0x0a, 0x20, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x18, 0x12, 0x0b,
	0x0a, 0x07, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x10, 0x19, 0x12, 0x0d, 0x0a, 0x09, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x10, 0x1a, 0x22, 0xcd, 0x05, 0x0a, 0x04, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x14, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x12, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x50, 0x0a, 0x16, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x66, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x65, 0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x14, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x66, 0x6f, 0x72,
	0x63, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x73, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x69,
	0x6c, 0x65, 0x67, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69,
	0x76, 0x69, 0x6c, 0x65, 0x67, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69,
	0x63, 0x61, 0x6c, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x70, 0x6f, 0x73, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x28,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0xc1, 0x02, 0x0a, 0x06, 0x50,
	0x65, 0x72, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52,
	0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x22, 0xa9,
	0x01, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x76, 0x65, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x05, 0x50,
	0x68, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x36,
	0x34, 0x5f, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x65,
	0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12,
	0x3f, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0x94, 0x01, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12,
	0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x70, 0x70,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x73, 0x22, 0xc0, 0x04, 0x0a, 0x0e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6d, 0x65, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x33, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6f, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x52, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x02, 0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x6f, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x3c,
	0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x12, 0x2f, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x8a, 0x05, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x66, 0x69,
	0x6c, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x4c, 0x0a, 0x14, 0x66, 0x75, 0x6c, 0x6c, 0x5f,
	0x64, 0x69, 0x73, 0x6b, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x12, 0x66, 0x75, 0x6c, 0x6c, 0x44, 0x69, 0x73, 0x6b, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x4e, 0x0a, 0x15, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x13, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x47, 0x0a, 0x11, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x65, 0x77, 0x61, 0x6c, 0x6c, 0x5f,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x66, 0x69, 0x72, 0x65, 0x77,
	0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x02, 0x6f,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x75, 0x6c, 0x6c, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x6d, 0x61, 0x63,
	0x6f, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x75, 0x78, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x78, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x65,
	0x5f, 0x6f, 0x73, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x10, 0x0a, 0x12, 0x0b,
	0x0a, 0x07, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x72,
	0x6f, 0x73, 0x10, 0x0e, 0x12, 0x09, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x0f, 0x22,
	0xbb, 0x02, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41, 0x70, 0x70, 0x12, 0x2f, 0x0a, 0x13,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xd4, 0x01,
	0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x43, 0x0a,
	0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x42, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x49, 0x0a, 0x0d, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xc0, 0x02,
	0x0a, 0x07, 0x50, 0x65, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x31, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x87, 0x02, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x69, 0x6f,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73,
	0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x12, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x70, 0x0a, 0x0a, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2a, 0x47, 0x0a, 0x0a,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0d, 0x0a, 0x09, 0x75, 0x6e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x10, 0x03, 0x42, 0x26, 0x0a, 0x0b, 0x69, 0x6f, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x73, 0x6d, 0x73, 0x5a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_io_openisms_api_proto_rawDescOnce sync.Once
	file_io_openisms_api_proto_rawDescData = file_io_openisms_api_proto_rawDesc
)

func file_io_openisms_api_proto_rawDescGZIP() []byte {
	file_io_openisms_api_proto_rawDescOnce.Do(func() {
		file_io_openisms_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_io_openisms_api_proto_rawDescData)
	})
	return file_io_openisms_api_proto_rawDescData
}

var file_io_openisms_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_io_openisms_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_io_openisms_api_proto_goTypes = []interface{}{
	(Visibility)(0),                       // 0: io.openisms.v1.Visibility
	(SourceSystem_SourceType)(0),          // 1: io.openisms.v1.SourceSystem.SourceType
	(OperatingSystem_OperatingSystems)(0), // 2: io.openisms.v1.OperatingSystem.OperatingSystems
	(*Event)(nil),                         // 3: io.openisms.v1.Event
	(*Meta)(nil),                          // 4: io.openisms.v1.Meta
	(*SourceSystem)(nil),                  // 5: io.openisms.v1.SourceSystem
	(*User)(nil),                          // 6: io.openisms.v1.User
	(*Person)(nil),                        // 7: io.openisms.v1.Person
	(*Name)(nil),                          // 8: io.openisms.v1.Name
	(*Photo)(nil),                         // 9: io.openisms.v1.Photo
	(*Employment)(nil),                    // 10: io.openisms.v1.Employment
	(*ConnectedAccount)(nil),              // 11: io.openisms.v1.ConnectedAccount
	(*PhysicalObject)(nil),                // 12: io.openisms.v1.PhysicalObject
	(*SecurityFeatures)(nil),              // 13: io.openisms.v1.SecurityFeatures
	(*Network)(nil),                       // 14: io.openisms.v1.Network
	(*OperatingSystem)(nil),               // 15: io.openisms.v1.OperatingSystem
	(*Application)(nil),                   // 16: io.openisms.v1.Application
	(*Profile)(nil),                       // 17: io.openisms.v1.Profile
	(*Date)(nil),                          // 18: io.openisms.v1.Date
	(*Certification)(nil),                 // 19: io.openisms.v1.Certification
	(*Company)(nil),                       // 20: io.openisms.v1.Company
	(*Pentest)(nil),                       // 21: io.openisms.v1.Pentest
	(*Repository)(nil),                    // 22: io.openisms.v1.Repository
	(*Statistics)(nil),                    // 23: io.openisms.v1.Statistics
	(*timestamppb.Timestamp)(nil),         // 24: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),          // 25: google.protobuf.BoolValue
	(*wrapperspb.Int32Value)(nil),         // 26: google.protobuf.Int32Value
}
var file_io_openisms_api_proto_depIdxs = []int32{
	4,  // 0: io.openisms.v1.Event.meta:type_name -> io.openisms.v1.Meta
	5,  // 1: io.openisms.v1.Event.source:type_name -> io.openisms.v1.SourceSystem
	6,  // 2: io.openisms.v1.Event.users:type_name -> io.openisms.v1.User
	12, // 3: io.openisms.v1.Event.devices:type_name -> io.openisms.v1.PhysicalObject
	22, // 4: io.openisms.v1.Event.repositories:type_name -> io.openisms.v1.Repository
	19, // 5: io.openisms.v1.Event.certification:type_name -> io.openisms.v1.Certification
	21, // 6: io.openisms.v1.Event.pentest:type_name -> io.openisms.v1.Pentest
	23, // 7: io.openisms.v1.Event.stats:type_name -> io.openisms.v1.Statistics
	24, // 8: io.openisms.v1.Meta.created:type_name -> google.protobuf.Timestamp
	1,  // 9: io.openisms.v1.SourceSystem.type:type_name -> io.openisms.v1.SourceSystem.SourceType
	7,  // 10: io.openisms.v1.User.person:type_name -> io.openisms.v1.Person
	25, // 11: io.openisms.v1.User.second_factor_active:type_name -> google.protobuf.BoolValue
	25, // 12: io.openisms.v1.User.second_factor_enforced:type_name -> google.protobuf.BoolValue
	25, // 13: io.openisms.v1.User.active:type_name -> google.protobuf.BoolValue
	25, // 14: io.openisms.v1.User.suspended:type_name -> google.protobuf.BoolValue
	25, // 15: io.openisms.v1.User.disabled:type_name -> google.protobuf.BoolValue
	25, // 16: io.openisms.v1.User.deleted:type_name -> google.protobuf.BoolValue
	10, // 17: io.openisms.v1.User.employment:type_name -> io.openisms.v1.Employment
	11, // 18: io.openisms.v1.User.connected_accounts:type_name -> io.openisms.v1.ConnectedAccount
	12, // 19: io.openisms.v1.User.possessions:type_name -> io.openisms.v1.PhysicalObject
	8,  // 20: io.openisms.v1.Person.name:type_name -> io.openisms.v1.Name
	9,  // 21: io.openisms.v1.Person.picture:type_name -> io.openisms.v1.Photo
	24, // 22: io.openisms.v1.Person.created:type_name -> google.protobuf.Timestamp
	24, // 23: io.openisms.v1.Person.updated:type_name -> google.protobuf.Timestamp
	24, // 24: io.openisms.v1.Photo.last_modified:type_name -> google.protobuf.Timestamp
	18, // 25: io.openisms.v1.Employment.begin:type_name -> io.openisms.v1.Date
	18, // 26: io.openisms.v1.Employment.end:type_name -> io.openisms.v1.Date
	14, // 27: io.openisms.v1.PhysicalObject.networks:type_name -> io.openisms.v1.Network
	15, // 28: io.openisms.v1.PhysicalObject.os:type_name -> io.openisms.v1.OperatingSystem
	13, // 29: io.openisms.v1.PhysicalObject.security:type_name -> io.openisms.v1.SecurityFeatures
	17, // 30: io.openisms.v1.PhysicalObject.profiles:type_name -> io.openisms.v1.Profile
	16, // 31: io.openisms.v1.PhysicalObject.apps:type_name -> io.openisms.v1.Application
	25, // 32: io.openisms.v1.SecurityFeatures.activation_lock:type_name -> google.protobuf.BoolValue
	25, // 33: io.openisms.v1.SecurityFeatures.supervised:type_name -> google.protobuf.BoolValue
	25, // 34: io.openisms.v1.SecurityFeatures.file_vault:type_name -> google.protobuf.BoolValue
	25, // 35: io.openisms.v1.SecurityFeatures.full_disk_encryption:type_name -> google.protobuf.BoolValue
	25, // 36: io.openisms.v1.SecurityFeatures.secure_password:type_name -> google.protobuf.BoolValue
	25, // 37: io.openisms.v1.SecurityFeatures.automatic_screen_lock:type_name -> google.protobuf.BoolValue
	26, // 38: io.openisms.v1.SecurityFeatures.screen_lock_after:type_name -> google.protobuf.Int32Value
	25, // 39: io.openisms.v1.SecurityFeatures.firewall_enabled:type_name -> google.protobuf.BoolValue
	25, // 40: io.openisms.v1.SecurityFeatures.automatic_updates:type_name -> google.protobuf.BoolValue
	2,  // 41: io.openisms.v1.OperatingSystem.os:type_name -> io.openisms.v1.OperatingSystem.OperatingSystems
	25, // 42: io.openisms.v1.Application.signed:type_name -> google.protobuf.BoolValue
	25, // 43: io.openisms.v1.Application.system_app:type_name -> google.protobuf.BoolValue
	25, // 44: io.openisms.v1.Profile.removal_allowed:type_name -> google.protobuf.BoolValue
	7,  // 45: io.openisms.v1.Company.contact:type_name -> io.openisms.v1.Person
	18, // 46: io.openisms.v1.Pentest.begin:type_name -> io.openisms.v1.Date
	18, // 47: io.openisms.v1.Pentest.end:type_name -> io.openisms.v1.Date
	20, // 48: io.openisms.v1.Pentest.company:type_name -> io.openisms.v1.Company
	7,  // 49: io.openisms.v1.Pentest.contacts:type_name -> io.openisms.v1.Person
	0,  // 50: io.openisms.v1.Repository.visibility:type_name -> io.openisms.v1.Visibility
	7,  // 51: io.openisms.v1.Repository.members:type_name -> io.openisms.v1.Person
	52, // [52:52] is the sub-list for method output_type
	52, // [52:52] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_io_openisms_api_proto_init() }
func file_io_openisms_api_proto_init() {
	if File_io_openisms_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_io_openisms_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Employment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhysicalObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityFeatures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Network); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatingSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pentest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_io_openisms_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statistics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_io_openisms_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_io_openisms_api_proto_goTypes,
		DependencyIndexes: file_io_openisms_api_proto_depIdxs,
		EnumInfos:         file_io_openisms_api_proto_enumTypes,
		MessageInfos:      file_io_openisms_api_proto_msgTypes,
	}.Build()
	File_io_openisms_api_proto = out.File
	file_io_openisms_api_proto_rawDesc = nil
	file_io_openisms_api_proto_goTypes = nil
	file_io_openisms_api_proto_depIdxs = nil
}
